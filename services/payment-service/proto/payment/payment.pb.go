// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/payment/payment.proto

package payment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PaymentType enum for different payment methods
type PaymentType int32

const (
	PaymentType_PAYMENT_TYPE_UNSPECIFIED    PaymentType = 0
	PaymentType_PAYMENT_TYPE_CREDIT_CARD    PaymentType = 1
	PaymentType_PAYMENT_TYPE_BANK_TRANSFER  PaymentType = 2
	PaymentType_PAYMENT_TYPE_DIGITAL_WALLET PaymentType = 3
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0: "PAYMENT_TYPE_UNSPECIFIED",
		1: "PAYMENT_TYPE_CREDIT_CARD",
		2: "PAYMENT_TYPE_BANK_TRANSFER",
		3: "PAYMENT_TYPE_DIGITAL_WALLET",
	}
	PaymentType_value = map[string]int32{
		"PAYMENT_TYPE_UNSPECIFIED":    0,
		"PAYMENT_TYPE_CREDIT_CARD":    1,
		"PAYMENT_TYPE_BANK_TRANSFER":  2,
		"PAYMENT_TYPE_DIGITAL_WALLET": 3,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_payment_payment_proto_enumTypes[0].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_proto_payment_payment_proto_enumTypes[0]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{0}
}

// PaymentStatus enum for tracking payment states
type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_STATUS_UNSPECIFIED    PaymentStatus = 0
	PaymentStatus_PAYMENT_STATUS_PENDING        PaymentStatus = 1 // Payment is being processed
	PaymentStatus_PAYMENT_STATUS_COMPLETED      PaymentStatus = 2 // Payment completed successfully
	PaymentStatus_PAYMENT_STATUS_FAILED         PaymentStatus = 3 // Payment failed
	PaymentStatus_PAYMENT_STATUS_CANCELLED      PaymentStatus = 4 // Payment was cancelled
	PaymentStatus_PAYMENT_STATUS_REFUNDED       PaymentStatus = 5 // Payment was refunded
	PaymentStatus_PAYMENT_STATUS_PARTIAL_REFUND PaymentStatus = 6 // Payment was partially refunded
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_STATUS_UNSPECIFIED",
		1: "PAYMENT_STATUS_PENDING",
		2: "PAYMENT_STATUS_COMPLETED",
		3: "PAYMENT_STATUS_FAILED",
		4: "PAYMENT_STATUS_CANCELLED",
		5: "PAYMENT_STATUS_REFUNDED",
		6: "PAYMENT_STATUS_PARTIAL_REFUND",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_STATUS_UNSPECIFIED":    0,
		"PAYMENT_STATUS_PENDING":        1,
		"PAYMENT_STATUS_COMPLETED":      2,
		"PAYMENT_STATUS_FAILED":         3,
		"PAYMENT_STATUS_CANCELLED":      4,
		"PAYMENT_STATUS_REFUNDED":       5,
		"PAYMENT_STATUS_PARTIAL_REFUND": 6,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_payment_payment_proto_enumTypes[1].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_proto_payment_payment_proto_enumTypes[1]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{1}
}

// ProcessPaymentRequest contains payment processing details
type ProcessPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   // Unique order identifier
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      // User making the payment
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                                  // Payment amount in USD
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                                // Currency code (e.g., "USD")
	PaymentMethod *PaymentMethod         `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"` // Payment method details
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`                          // Payment description
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessPaymentRequest) Reset() {
	*x = ProcessPaymentRequest{}
	mi := &file_proto_payment_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentRequest) ProtoMessage() {}

func (x *ProcessPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentRequest.ProtoReflect.Descriptor instead.
func (*ProcessPaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessPaymentRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ProcessPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProcessPaymentRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ProcessPaymentRequest) GetPaymentMethod() *PaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return nil
}

func (x *ProcessPaymentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// ProcessPaymentResponse contains payment processing result
type ProcessPaymentResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                         // Whether payment was successful
	TransactionId   string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`         // Unique transaction identifier
	Message         string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                          // Success or error message
	Status          PaymentStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=payment.v1.PaymentStatus" json:"status,omitempty"`             // Payment status
	ProcessedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`               // When payment was processed
	ProcessedAmount float64                `protobuf:"fixed64,6,opt,name=processed_amount,json=processedAmount,proto3" json:"processed_amount,omitempty"` // Actually processed amount
	Currency        string                 `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`                                        // Currency used
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProcessPaymentResponse) Reset() {
	*x = ProcessPaymentResponse{}
	mi := &file_proto_payment_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessPaymentResponse) ProtoMessage() {}

func (x *ProcessPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessPaymentResponse.ProtoReflect.Descriptor instead.
func (*ProcessPaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessPaymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ProcessPaymentResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ProcessPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessPaymentResponse) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *ProcessPaymentResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *ProcessPaymentResponse) GetProcessedAmount() float64 {
	if x != nil {
		return x.ProcessedAmount
	}
	return 0
}

func (x *ProcessPaymentResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// GetPaymentStatusRequest for checking payment status
type GetPaymentStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Transaction ID to check
	OrderId       string                 `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   // Alternative: check by order ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaymentStatusRequest) Reset() {
	*x = GetPaymentStatusRequest{}
	mi := &file_proto_payment_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentStatusRequest) ProtoMessage() {}

func (x *GetPaymentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentStatusRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{2}
}

func (x *GetPaymentStatusRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetPaymentStatusRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// GetPaymentStatusResponse contains payment status information
type GetPaymentStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Found         bool                   `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`                                     // Whether payment was found
	TransactionId string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Transaction identifier
	OrderId       string                 `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`                   // Associated order ID
	Status        PaymentStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=payment.v1.PaymentStatus" json:"status,omitempty"`     // Current payment status
	Amount        float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`                                  // Payment amount
	Currency      string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`                                // Currency code
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`             // When payment was created
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`       // When payment was processed
	Message       string                 `protobuf:"bytes,9,opt,name=message,proto3" json:"message,omitempty"`                                  // Status message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaymentStatusResponse) Reset() {
	*x = GetPaymentStatusResponse{}
	mi := &file_proto_payment_payment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentStatusResponse) ProtoMessage() {}

func (x *GetPaymentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentStatusResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{3}
}

func (x *GetPaymentStatusResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetPaymentStatusResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *GetPaymentStatusResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *GetPaymentStatusResponse) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *GetPaymentStatusResponse) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetPaymentStatusResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetPaymentStatusResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetPaymentStatusResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

func (x *GetPaymentStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RefundPaymentRequest for processing refunds
type RefundPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Original transaction ID
	Amount        float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`                                  // Refund amount (can be partial)
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                                    // Refund reason
	RequestedBy   string                 `protobuf:"bytes,4,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`       // User requesting refund
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefundPaymentRequest) Reset() {
	*x = RefundPaymentRequest{}
	mi := &file_proto_payment_payment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundPaymentRequest) ProtoMessage() {}

func (x *RefundPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundPaymentRequest.ProtoReflect.Descriptor instead.
func (*RefundPaymentRequest) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{4}
}

func (x *RefundPaymentRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *RefundPaymentRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RefundPaymentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RefundPaymentRequest) GetRequestedBy() string {
	if x != nil {
		return x.RequestedBy
	}
	return ""
}

// RefundPaymentResponse contains refund processing result
type RefundPaymentResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Success               bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                           // Whether refund was successful
	RefundId              string                 `protobuf:"bytes,2,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`                                          // Unique refund identifier
	OriginalTransactionId string                 `protobuf:"bytes,3,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"` // Original transaction ID
	RefundedAmount        float64                `protobuf:"fixed64,4,opt,name=refunded_amount,json=refundedAmount,proto3" json:"refunded_amount,omitempty"`                      // Actually refunded amount
	Message               string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                                                            // Success or error message
	ProcessedAt           *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`                                 // When refund was processed
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RefundPaymentResponse) Reset() {
	*x = RefundPaymentResponse{}
	mi := &file_proto_payment_payment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundPaymentResponse) ProtoMessage() {}

func (x *RefundPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundPaymentResponse.ProtoReflect.Descriptor instead.
func (*RefundPaymentResponse) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{5}
}

func (x *RefundPaymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RefundPaymentResponse) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *RefundPaymentResponse) GetOriginalTransactionId() string {
	if x != nil {
		return x.OriginalTransactionId
	}
	return ""
}

func (x *RefundPaymentResponse) GetRefundedAmount() float64 {
	if x != nil {
		return x.RefundedAmount
	}
	return 0
}

func (x *RefundPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RefundPaymentResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// PaymentMethod represents different payment options
type PaymentMethod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          PaymentType            `protobuf:"varint,1,opt,name=type,proto3,enum=payment.v1.PaymentType" json:"type,omitempty"`
	CreditCard    *CreditCard            `protobuf:"bytes,2,opt,name=credit_card,json=creditCard,proto3" json:"credit_card,omitempty"`
	BankTransfer  *BankTransfer          `protobuf:"bytes,3,opt,name=bank_transfer,json=bankTransfer,proto3" json:"bank_transfer,omitempty"`
	DigitalWallet *DigitalWallet         `protobuf:"bytes,4,opt,name=digital_wallet,json=digitalWallet,proto3" json:"digital_wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentMethod) Reset() {
	*x = PaymentMethod{}
	mi := &file_proto_payment_payment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentMethod) ProtoMessage() {}

func (x *PaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentMethod.ProtoReflect.Descriptor instead.
func (*PaymentMethod) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{6}
}

func (x *PaymentMethod) GetType() PaymentType {
	if x != nil {
		return x.Type
	}
	return PaymentType_PAYMENT_TYPE_UNSPECIFIED
}

func (x *PaymentMethod) GetCreditCard() *CreditCard {
	if x != nil {
		return x.CreditCard
	}
	return nil
}

func (x *PaymentMethod) GetBankTransfer() *BankTransfer {
	if x != nil {
		return x.BankTransfer
	}
	return nil
}

func (x *PaymentMethod) GetDigitalWallet() *DigitalWallet {
	if x != nil {
		return x.DigitalWallet
	}
	return nil
}

// CreditCard payment method details
type CreditCard struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MaskedNumber   string                 `protobuf:"bytes,1,opt,name=masked_number,json=maskedNumber,proto3" json:"masked_number,omitempty"`       // e.g., "**** **** **** 1234"
	ExpiryMonth    string                 `protobuf:"bytes,2,opt,name=expiry_month,json=expiryMonth,proto3" json:"expiry_month,omitempty"`          // MM
	ExpiryYear     string                 `protobuf:"bytes,3,opt,name=expiry_year,json=expiryYear,proto3" json:"expiry_year,omitempty"`             // YYYY
	CardholderName string                 `protobuf:"bytes,4,opt,name=cardholder_name,json=cardholderName,proto3" json:"cardholder_name,omitempty"` // Name on card
	Brand          string                 `protobuf:"bytes,5,opt,name=brand,proto3" json:"brand,omitempty"`                                         // Visa, MasterCard, etc.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditCard) Reset() {
	*x = CreditCard{}
	mi := &file_proto_payment_payment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditCard) ProtoMessage() {}

func (x *CreditCard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditCard.ProtoReflect.Descriptor instead.
func (*CreditCard) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{7}
}

func (x *CreditCard) GetMaskedNumber() string {
	if x != nil {
		return x.MaskedNumber
	}
	return ""
}

func (x *CreditCard) GetExpiryMonth() string {
	if x != nil {
		return x.ExpiryMonth
	}
	return ""
}

func (x *CreditCard) GetExpiryYear() string {
	if x != nil {
		return x.ExpiryYear
	}
	return ""
}

func (x *CreditCard) GetCardholderName() string {
	if x != nil {
		return x.CardholderName
	}
	return ""
}

func (x *CreditCard) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

// BankTransfer payment method details
type BankTransfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BankName      string                 `protobuf:"bytes,1,opt,name=bank_name,json=bankName,proto3" json:"bank_name,omitempty"`                // Name of the bank
	AccountNumber string                 `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"` // Masked account number
	RoutingNumber string                 `protobuf:"bytes,3,opt,name=routing_number,json=routingNumber,proto3" json:"routing_number,omitempty"` // Bank routing number
	AccountHolder string                 `protobuf:"bytes,4,opt,name=account_holder,json=accountHolder,proto3" json:"account_holder,omitempty"` // Account holder name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BankTransfer) Reset() {
	*x = BankTransfer{}
	mi := &file_proto_payment_payment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankTransfer) ProtoMessage() {}

func (x *BankTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankTransfer.ProtoReflect.Descriptor instead.
func (*BankTransfer) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{8}
}

func (x *BankTransfer) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *BankTransfer) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *BankTransfer) GetRoutingNumber() string {
	if x != nil {
		return x.RoutingNumber
	}
	return ""
}

func (x *BankTransfer) GetAccountHolder() string {
	if x != nil {
		return x.AccountHolder
	}
	return ""
}

// DigitalWallet payment method details
type DigitalWallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Provider      string                 `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`                 // PayPal, Apple Pay, Google Pay, etc.
	WalletId      string                 `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"` // Wallet identifier
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`                       // Associated email (if applicable)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DigitalWallet) Reset() {
	*x = DigitalWallet{}
	mi := &file_proto_payment_payment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DigitalWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DigitalWallet) ProtoMessage() {}

func (x *DigitalWallet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_payment_payment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DigitalWallet.ProtoReflect.Descriptor instead.
func (*DigitalWallet) Descriptor() ([]byte, []int) {
	return file_proto_payment_payment_proto_rawDescGZIP(), []int{9}
}

func (x *DigitalWallet) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *DigitalWallet) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *DigitalWallet) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_proto_payment_payment_proto protoreflect.FileDescriptor

const file_proto_payment_payment_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/payment/payment.proto\x12\n" +
	"payment.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe3\x01\n" +
	"\x15ProcessPaymentRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12@\n" +
	"\x0epayment_method\x18\x05 \x01(\v2\x19.payment.v1.PaymentMethodR\rpaymentMethod\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\"\xac\x02\n" +
	"\x16ProcessPaymentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.payment.v1.PaymentStatusR\x06status\x12=\n" +
	"\fprocessed_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x12)\n" +
	"\x10processed_amount\x18\x06 \x01(\x01R\x0fprocessedAmount\x12\x1a\n" +
	"\bcurrency\x18\a \x01(\tR\bcurrency\"[\n" +
	"\x17GetPaymentStatusRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x19\n" +
	"\border_id\x18\x02 \x01(\tR\aorderId\"\xed\x02\n" +
	"\x18GetPaymentStatusResponse\x12\x14\n" +
	"\x05found\x18\x01 \x01(\bR\x05found\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12\x19\n" +
	"\border_id\x18\x03 \x01(\tR\aorderId\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.payment.v1.PaymentStatusR\x06status\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fprocessed_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\x12\x18\n" +
	"\amessage\x18\t \x01(\tR\amessage\"\x90\x01\n" +
	"\x14RefundPaymentRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12!\n" +
	"\frequested_by\x18\x04 \x01(\tR\vrequestedBy\"\x88\x02\n" +
	"\x15RefundPaymentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\trefund_id\x18\x02 \x01(\tR\brefundId\x126\n" +
	"\x17original_transaction_id\x18\x03 \x01(\tR\x15originalTransactionId\x12'\n" +
	"\x0frefunded_amount\x18\x04 \x01(\x01R\x0erefundedAmount\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12=\n" +
	"\fprocessed_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"\xf6\x01\n" +
	"\rPaymentMethod\x12+\n" +
	"\x04type\x18\x01 \x01(\x0e2\x17.payment.v1.PaymentTypeR\x04type\x127\n" +
	"\vcredit_card\x18\x02 \x01(\v2\x16.payment.v1.CreditCardR\n" +
	"creditCard\x12=\n" +
	"\rbank_transfer\x18\x03 \x01(\v2\x18.payment.v1.BankTransferR\fbankTransfer\x12@\n" +
	"\x0edigital_wallet\x18\x04 \x01(\v2\x19.payment.v1.DigitalWalletR\rdigitalWallet\"\xb4\x01\n" +
	"\n" +
	"CreditCard\x12#\n" +
	"\rmasked_number\x18\x01 \x01(\tR\fmaskedNumber\x12!\n" +
	"\fexpiry_month\x18\x02 \x01(\tR\vexpiryMonth\x12\x1f\n" +
	"\vexpiry_year\x18\x03 \x01(\tR\n" +
	"expiryYear\x12'\n" +
	"\x0fcardholder_name\x18\x04 \x01(\tR\x0ecardholderName\x12\x14\n" +
	"\x05brand\x18\x05 \x01(\tR\x05brand\"\xa0\x01\n" +
	"\fBankTransfer\x12\x1b\n" +
	"\tbank_name\x18\x01 \x01(\tR\bbankName\x12%\n" +
	"\x0eaccount_number\x18\x02 \x01(\tR\raccountNumber\x12%\n" +
	"\x0erouting_number\x18\x03 \x01(\tR\rroutingNumber\x12%\n" +
	"\x0eaccount_holder\x18\x04 \x01(\tR\raccountHolder\"^\n" +
	"\rDigitalWallet\x12\x1a\n" +
	"\bprovider\x18\x01 \x01(\tR\bprovider\x12\x1b\n" +
	"\twallet_id\x18\x02 \x01(\tR\bwalletId\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email*\x8a\x01\n" +
	"\vPaymentType\x12\x1c\n" +
	"\x18PAYMENT_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18PAYMENT_TYPE_CREDIT_CARD\x10\x01\x12\x1e\n" +
	"\x1aPAYMENT_TYPE_BANK_TRANSFER\x10\x02\x12\x1f\n" +
	"\x1bPAYMENT_TYPE_DIGITAL_WALLET\x10\x03*\xe2\x01\n" +
	"\rPaymentStatus\x12\x1e\n" +
	"\x1aPAYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PAYMENT_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18PAYMENT_STATUS_COMPLETED\x10\x02\x12\x19\n" +
	"\x15PAYMENT_STATUS_FAILED\x10\x03\x12\x1c\n" +
	"\x18PAYMENT_STATUS_CANCELLED\x10\x04\x12\x1b\n" +
	"\x17PAYMENT_STATUS_REFUNDED\x10\x05\x12!\n" +
	"\x1dPAYMENT_STATUS_PARTIAL_REFUND\x10\x062\x9e\x02\n" +
	"\x0ePaymentService\x12W\n" +
	"\x0eProcessPayment\x12!.payment.v1.ProcessPaymentRequest\x1a\".payment.v1.ProcessPaymentResponse\x12]\n" +
	"\x10GetPaymentStatus\x12#.payment.v1.GetPaymentStatusRequest\x1a$.payment.v1.GetPaymentStatusResponse\x12T\n" +
	"\rRefundPayment\x12 .payment.v1.RefundPaymentRequest\x1a!.payment.v1.RefundPaymentResponseBKZIgithub.com/amiosamu/rocket-science/services/payment-service/proto/paymentb\x06proto3"

var (
	file_proto_payment_payment_proto_rawDescOnce sync.Once
	file_proto_payment_payment_proto_rawDescData []byte
)

func file_proto_payment_payment_proto_rawDescGZIP() []byte {
	file_proto_payment_payment_proto_rawDescOnce.Do(func() {
		file_proto_payment_payment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_payment_payment_proto_rawDesc), len(file_proto_payment_payment_proto_rawDesc)))
	})
	return file_proto_payment_payment_proto_rawDescData
}

var file_proto_payment_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_payment_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_payment_payment_proto_goTypes = []any{
	(PaymentType)(0),                 // 0: payment.v1.PaymentType
	(PaymentStatus)(0),               // 1: payment.v1.PaymentStatus
	(*ProcessPaymentRequest)(nil),    // 2: payment.v1.ProcessPaymentRequest
	(*ProcessPaymentResponse)(nil),   // 3: payment.v1.ProcessPaymentResponse
	(*GetPaymentStatusRequest)(nil),  // 4: payment.v1.GetPaymentStatusRequest
	(*GetPaymentStatusResponse)(nil), // 5: payment.v1.GetPaymentStatusResponse
	(*RefundPaymentRequest)(nil),     // 6: payment.v1.RefundPaymentRequest
	(*RefundPaymentResponse)(nil),    // 7: payment.v1.RefundPaymentResponse
	(*PaymentMethod)(nil),            // 8: payment.v1.PaymentMethod
	(*CreditCard)(nil),               // 9: payment.v1.CreditCard
	(*BankTransfer)(nil),             // 10: payment.v1.BankTransfer
	(*DigitalWallet)(nil),            // 11: payment.v1.DigitalWallet
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
}
var file_proto_payment_payment_proto_depIdxs = []int32{
	8,  // 0: payment.v1.ProcessPaymentRequest.payment_method:type_name -> payment.v1.PaymentMethod
	1,  // 1: payment.v1.ProcessPaymentResponse.status:type_name -> payment.v1.PaymentStatus
	12, // 2: payment.v1.ProcessPaymentResponse.processed_at:type_name -> google.protobuf.Timestamp
	1,  // 3: payment.v1.GetPaymentStatusResponse.status:type_name -> payment.v1.PaymentStatus
	12, // 4: payment.v1.GetPaymentStatusResponse.created_at:type_name -> google.protobuf.Timestamp
	12, // 5: payment.v1.GetPaymentStatusResponse.processed_at:type_name -> google.protobuf.Timestamp
	12, // 6: payment.v1.RefundPaymentResponse.processed_at:type_name -> google.protobuf.Timestamp
	0,  // 7: payment.v1.PaymentMethod.type:type_name -> payment.v1.PaymentType
	9,  // 8: payment.v1.PaymentMethod.credit_card:type_name -> payment.v1.CreditCard
	10, // 9: payment.v1.PaymentMethod.bank_transfer:type_name -> payment.v1.BankTransfer
	11, // 10: payment.v1.PaymentMethod.digital_wallet:type_name -> payment.v1.DigitalWallet
	2,  // 11: payment.v1.PaymentService.ProcessPayment:input_type -> payment.v1.ProcessPaymentRequest
	4,  // 12: payment.v1.PaymentService.GetPaymentStatus:input_type -> payment.v1.GetPaymentStatusRequest
	6,  // 13: payment.v1.PaymentService.RefundPayment:input_type -> payment.v1.RefundPaymentRequest
	3,  // 14: payment.v1.PaymentService.ProcessPayment:output_type -> payment.v1.ProcessPaymentResponse
	5,  // 15: payment.v1.PaymentService.GetPaymentStatus:output_type -> payment.v1.GetPaymentStatusResponse
	7,  // 16: payment.v1.PaymentService.RefundPayment:output_type -> payment.v1.RefundPaymentResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_payment_payment_proto_init() }
func file_proto_payment_payment_proto_init() {
	if File_proto_payment_payment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_payment_payment_proto_rawDesc), len(file_proto_payment_payment_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_payment_payment_proto_goTypes,
		DependencyIndexes: file_proto_payment_payment_proto_depIdxs,
		EnumInfos:         file_proto_payment_payment_proto_enumTypes,
		MessageInfos:      file_proto_payment_payment_proto_msgTypes,
	}.Build()
	File_proto_payment_payment_proto = out.File
	file_proto_payment_payment_proto_goTypes = nil
	file_proto_payment_payment_proto_depIdxs = nil
}
