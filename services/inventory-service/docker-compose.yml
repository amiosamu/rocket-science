# Inventory Service Docker Compose
# For local development and testing

version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: inventory-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: inventory_db
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongodb-init.js:/docker-entrypoint-initdb.d/mongodb-init.js:ro
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Inventory Service - Production Build
  inventory-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
      args:
        VERSION: 1.0.0
        BUILD_TIME: ${BUILD_TIME:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        GIT_COMMIT: ${GIT_COMMIT:-unknown}
    container_name: inventory-service
    restart: unless-stopped
    ports:
      - "50053:50053"  # gRPC port
    environment:
      # Server Configuration
      - INVENTORY_SERVICE_PORT=50053
      - LOG_LEVEL=info
      - ENVIRONMENT=docker
      - METRICS_ENABLED=true
      - TRACING_ENABLED=true
      - SERVICE_NAME=inventory-service
      - SERVICE_VERSION=1.0.0
      
      # MongoDB Configuration
      - MONGODB_CONNECTION_URL=mongodb://admin:password@mongodb:27017/inventory_db?authSource=admin
      - MONGODB_DATABASE_NAME=inventory_db
      - MONGODB_CONNECT_TIMEOUT=10s
      - MONGODB_QUERY_TIMEOUT=5s
      - MONGODB_MAX_POOL_SIZE=100
      - MONGODB_MIN_POOL_SIZE=10
      
      # Inventory Configuration
      - INVENTORY_DEFAULT_STOCK_LEVEL=100
      - INVENTORY_LOW_STOCK_THRESHOLD=10
      - INVENTORY_MAX_RESERVATION_TIME_MIN=30
      - INVENTORY_AUTO_RESTOCK_ENABLED=false
      - SEED_TEST_DATA=true
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - inventory-network
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "nc -z localhost 50053 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  # Inventory Service - Development Mode with Hot Reload
  inventory-service-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: inventory-service-dev
    restart: unless-stopped
    ports:
      - "50054:50053"  # gRPC port (different from prod)
      - "40000:40000"  # Debug port
    environment:
      # Server Configuration
      - INVENTORY_SERVICE_PORT=50053
      - LOG_LEVEL=debug
      - ENVIRONMENT=development
      - METRICS_ENABLED=true
      - TRACING_ENABLED=true
      - SERVICE_NAME=inventory-service-dev
      - SERVICE_VERSION=1.0.0-dev
      
      # MongoDB Configuration
      - MONGODB_CONNECTION_URL=mongodb://admin:password@mongodb:27017/inventory_db?authSource=admin
      - MONGODB_DATABASE_NAME=inventory_db
      - MONGODB_CONNECT_TIMEOUT=10s
      - MONGODB_QUERY_TIMEOUT=5s
      - MONGODB_MAX_POOL_SIZE=50
      - MONGODB_MIN_POOL_SIZE=5
      
      # Inventory Configuration (dev optimized)
      - INVENTORY_DEFAULT_STOCK_LEVEL=50
      - INVENTORY_LOW_STOCK_THRESHOLD=5
      - INVENTORY_MAX_RESERVATION_TIME_MIN=10  # Shorter for dev
      - INVENTORY_AUTO_RESTOCK_ENABLED=false
      - SEED_TEST_DATA=true  # Always seed in dev
    volumes:
      - .:/app
      - /app/vendor  # Anonymous volume for vendor directory
    working_dir: /app
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - inventory-network
    profiles:
      - development

  # MongoDB Admin Interface (optional)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: inventory-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - inventory-network
    profiles:
      - tools

  # gRPC UI for testing (optional)
  grpcui:
    image: fullstorydev/grpcui:latest
    container_name: inventory-grpcui
    restart: unless-stopped
    ports:
      - "8080:8080"
    command: 
      - -plaintext
      - -bind=0.0.0.0
      - -port=8080
      - inventory-service:50053
    depends_on:
      - inventory-service
    networks:
      - inventory-network
    profiles:
      - tools

  # gRPC Web Proxy (optional, for web clients)
  grpc-web-proxy:
    image: ghcr.io/improbable-eng/grpc-web:latest
    container_name: inventory-grpc-web-proxy
    restart: unless-stopped
    ports:
      - "8082:8082"
    command:
      - --backend_addr=inventory-service:50053
      - --run_tls_server=false
      - --allow_all_origins
      - --server_bind_address=0.0.0.0
      - --server_http_debug_port=8082
    depends_on:
      - inventory-service
    networks:
      - inventory-network
    profiles:
      - tools

# Networks
networks:
  inventory-network:
    driver: bridge
    name: inventory-network

# Volumes
volumes:
  mongodb_data:
    driver: local
    name: inventory-mongodb-data
  go-modules:
    driver: local