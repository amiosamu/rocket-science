global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'rocket-science'
    environment: 'development'

# Alertmanager configuration (optional)
# alerting:
#   alertmanagers:
#     - static_configs:
#         - targets:
#           - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # OpenTelemetry Collector metrics
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['rocket-otel-collector:8888', 'rocket-otel-collector:8889']
    scrape_interval: 15s
    metrics_path: /metrics

  # ===== MICROSERVICES =====
  
  # Envoy Gateway
  - job_name: 'envoy-gateway'
    static_configs:
      - targets: ['rocket-envoy:9901']
    scrape_interval: 15s
    metrics_path: /stats/prometheus
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'envoy-gateway'
      - source_labels: [__address__]
        target_label: service
        replacement: 'envoy'

  # IAM Service
  - job_name: 'iam-service'
    static_configs:
      - targets: ['rocket-iam:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'iam-service'

  # Order Service
  - job_name: 'order-service'
    static_configs:
      - targets: ['rocket-order:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'order-service'

  # Payment Service
  - job_name: 'payment-service'
    static_configs:
      - targets: ['rocket-payment:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'payment-service'

  # Inventory Service
  - job_name: 'inventory-service'
    static_configs:
      - targets: ['rocket-inventory:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'inventory-service'

  # Assembly Service
  - job_name: 'assembly-service'
    static_configs:
      - targets: ['rocket-assembly:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'assembly-service'

  # Notification Service
  - job_name: 'notification-service'
    static_configs:
      - targets: ['rocket-notification:9090']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'notification-service'

  # ===== INFRASTRUCTURE =====

  # PostgreSQL
  - job_name: 'postgres'
    static_configs:
      - targets: ['rocket-postgres:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'postgresql'

  # MongoDB
  - job_name: 'mongodb'
    static_configs:
      - targets: ['rocket-mongodb:9216']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'mongodb'

  # Redis
  - job_name: 'redis'
    static_configs:
      - targets: ['rocket-redis:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'redis'

  # Kafka
  - job_name: 'kafka'
    static_configs:
      - targets: ['rocket-kafka:9308']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'kafka'

  # ===== MONITORING STACK =====

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['rocket-grafana:3000']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'grafana'

  # Jaeger
  - job_name: 'jaeger'
    static_configs:
      - targets: ['rocket-jaeger:14269']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'jaeger'

  # Elasticsearch
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['rocket-elasticsearch:9200']
    scrape_interval: 60s
    metrics_path: /_prometheus/metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'elasticsearch'

  # Kibana
  - job_name: 'kibana'
    static_configs:
      - targets: ['rocket-kibana:5601']
    scrape_interval: 60s
    metrics_path: /api/status
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'kibana'

# Note: Recording rules should be in separate files under rules/ directory
# This section is removed from the main config file

# Remote storage configuration (for long-term storage)
# remote_storage:
#   remote_write:
#     - url: "https://your-remote-storage-endpoint/api/v1/write"
#       name: "long-term-storage"
#       queue_config:
#         max_samples_per_send: 1000
#         max_shards: 200
#         capacity: 10000
